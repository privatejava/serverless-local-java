service: serverless-example-simple-api

provider:
  name: aws
  runtime: java8
  memorySize: 512

  # you can overwrite  defaults here
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  timeout: 180
  tracing: true
  environment:
    PROFILE_ID: ${self:provider.stage}


  logRetentionInDays: 30
  deploymentBucket:
    serverSideEncryption: AES256

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow" # xray permissions (required)
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

    - Effect: "Allow"
      Action:
        - "ec2:CreateNetworkInterface"
        - "ec2:DescribeNetworkInterfaces"
        - "ec2:DetachNetworkInterface"
        - "ec2:DeleteNetworkInterface"
      Resource: "*"

    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
        - logs:PutRetentionPolicy
      Resource:
        - "Fn::Join":
            - ":"
            - - "arn:aws:logs"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "log-group:/aws/lambda/*:*:*"



package:
  artifact: target/${self:service}-${self:provider.stage}.jar

functions:
  helloPost:
    handler: np.com.ngopal.example.serverless.HelloWorldHandler::handler
    events:
      - http:
          path: /api/simple-api
          method: post
          cors: true
